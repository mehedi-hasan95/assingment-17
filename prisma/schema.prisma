// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  fname             String              @db.VarChar(50)
  lname             String              @db.VarChar(50)
  email             String              @unique @db.VarChar(100)
  mobile            String              @db.VarChar(100)
  password          String              @db.VarChar(100)
  otp               String              @db.VarChar(100)
  categories        categories[]
  products          products[]
  customers         customers[]
  invoices          invoices[]
  invoices_products invoices_products[]
  created_at        DateTime            @default(now()) @db.Timestamp(0)
  updated_at        DateTime            @default(now()) @updatedAt @db.Timestamp(0)
}

model categories {
  id         BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  name       String     @db.VarChar(50)
  user_id    BigInt     @db.UnsignedBigInt
  users      users      @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  products   products[]
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @updatedAt @db.Timestamp(0)
}

model products {
  id                BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  user_id           BigInt              @db.UnsignedBigInt
  category_id       BigInt              @db.UnsignedBigInt
  name              String              @db.VarChar(100)
  price             String              @db.VarChar(50)
  unit              String              @db.VarChar(50)
  img_url           String              @db.VarChar(50)
  users             users               @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  categories        categories          @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  created_at        DateTime            @default(now()) @db.Timestamp(0)
  updated_at        DateTime            @default(now()) @updatedAt @db.Timestamp(0)
  invoices_products invoices_products[]
}

model customers {
  id         BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  name       String     @db.VarChar(50)
  email      String     @db.VarChar(100)
  mobile     String     @db.VarChar(100)
  user_id    BigInt     @db.UnsignedBigInt
  users      users      @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  invoices   invoices[]
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @updatedAt @db.Timestamp(0)
}

model invoices {
  id                BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  total             String              @db.VarChar(50)
  discount          String              @db.VarChar(50)
  vat               String              @db.VarChar(50)
  payable           String              @db.VarChar(50)
  user_id           BigInt              @db.UnsignedBigInt
  customer_id       BigInt              @db.UnsignedBigInt
  users             users               @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  customers         customers           @relation(fields: [customer_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  invoices_products invoices_products[]
  created_at        DateTime            @default(now()) @db.Timestamp(0)
  updated_at        DateTime            @default(now()) @updatedAt @db.Timestamp(0)
}

model invoices_products {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  invoice_id BigInt   @db.UnsignedBigInt
  product_id BigInt   @db.UnsignedBigInt
  user_id    BigInt   @db.UnsignedBigInt
  qty        String   @db.VarChar(50)
  sale_price String   @db.VarChar(50)
  invoices   invoices @relation(fields: [invoice_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  products   products @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)
}
